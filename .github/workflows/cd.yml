name: CD

on:
  push:
    branches: [main]
    paths-ignore:
      - .github/**
      - .cz.toml
      - .gitignore
      - .goreleaser.yml
      - .pre-commit-config.yaml
      - .yamllint.yml
      - CHANGELOG.md
      - README.md
  workflow_dispatch:

env:
  # renovate: datasource=pypi depName=commitizen
  COMMITIZEN_VERSION: 3.18.4

jobs:
  ci:
    name: CI
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  release:
    name: Release
    needs: ci
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Check if version bumped
        id: latest-tag
        run: echo "tag=$(git describe --abbrev=0)" >> "$GITHUB_OUTPUT"

      - name: Dry run
        uses: commitizen-tools/commitizen-action@1f11eb222996406681d2bfa1eb3d997eca46557c # 0.21.0
        with:
          github_token: ${{ github.token }}
          changelog_increment_filename: _changelog.md
          commitizen_version: ${{ env.COMMITIZEN_VERSION }}
          dry_run: true

      - name: Bump
        uses: commitizen-tools/commitizen-action@1f11eb222996406681d2bfa1eb3d997eca46557c # 0.21.0
        with:
          github_token: ${{ github.token }}
          changelog_increment_filename: _changelog.md
          commitizen_version: ${{ env.COMMITIZEN_VERSION }}

      - name: Check if version bumped
        id: check-tag
        run: |
          [ "${{ steps.latest-tag.outputs.tag }}" != "${{ env.REVISION }}" ] && bump=true
          echo "bump=$bump" >> "$GITHUB_OUTPUT"

      - name: Setup Go
        if: steps.check-tag.outputs.bump == 'true'
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          cache: true
          check-latest: true
          go-version-file: go.mod

      - name: Setup QEMU for Docker
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

      - name: Login to Docker registry
        if: github.ref_name == 'main'
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        if: steps.check-tag.outputs.bump == 'true'
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
        with:
          args: release --clean --release-notes _changelog.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

  # Ideally, you would commit the new version to the repository into the Kubernetes manifests file and let a tool like ArgoCD do the deployment

  deploy:
    name: Deploy
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1


      # install required tools (kubectl, helm, whatever you need)
      # authenticate against your cloud provider and/or Kubernetes cluster
      # run `kubeclt apply [...]` or `helm install [...]` or whatever you need to do to deploy your application
